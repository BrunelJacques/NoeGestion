# Generated by Django 4.2 on 2023-05-17 14:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GeAnalytique',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=200, unique=True)),
                ('abrege', models.CharField(max_length=32)),
                ('params', models.TextField(blank=True, default='', null=True)),
                ('axe', models.CharField(blank=True, default='', max_length=32)),
                ('saisie', models.DateField(auto_now=True, help_text="Date de l'entrée de l'item")),
                ('obsolete', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'GeAnalytique: Gestion générale, codes analytique',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='StArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=128, unique=True)),
                ('nom_court', models.CharField(db_index=True, max_length=32, unique=True)),
                ('unite_stock', models.CharField(default='unit', help_text='Unité de base pour compter, accompagne le nom', max_length=8)),
                ('unite_colis', models.CharField(default='pqt', help_text='Utilisé lors des entrées pour un prix au conditionnement', max_length=8)),
                ('colis_par', models.DecimalField(decimal_places=4, default=1, help_text="Nbre d'unités stock par unité de colis", max_digits=10)),
                ('rations', models.DecimalField(decimal_places=4, default=1, help_text='Nbre de rations par unité de stock', max_digits=10)),
                ('qte_stock', models.DecimalField(db_index=True, decimal_places=4, default=0, help_text='recalculé régulièrement pour inventaire', max_digits=10)),
                ('tx_tva', models.DecimalField(decimal_places=4, default=5.5, help_text='tx de TVA en %', max_digits=10)),
                ('qte_mini', models.DecimalField(blank=True, decimal_places=2, help_text="Déclencheur d'alerte pour réappro", max_digits=8, null=True)),
                ('prix_moyen', models.DecimalField(blank=True, decimal_places=4, help_text='Prix unitaire moyen historique du stock', max_digits=10, null=True)),
                ('prix_actuel', models.DecimalField(blank=True, decimal_places=4, help_text='Dernier prix TTC unitaire livré ou de réappro', max_digits=10, null=True)),
                ('dernier_achat', models.DateField(help_text='Date de dernière entrée avec prix saisi', null=True)),
                ('ordi', models.CharField(blank=True, help_text="Nom de l'ordi utilisé pour l'entrée ou la modif", max_length=32)),
                ('saisie', models.DateField(auto_now=True, help_text="Date de l'entrée de l'item")),
                ('obsolete', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'StArticle: Items de stock géré',
                'ordering': ['nom_court'],
            },
        ),
        migrations.CreateModel(
            name='StEffectif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jour', models.DateField()),
                ('midi_clients', models.IntegerField()),
                ('midi_repas', models.IntegerField()),
                ('soir_clients', models.IntegerField()),
                ('soir_repas', models.IntegerField()),
                ('prevu_clients', models.IntegerField()),
                ('prevu_repas', models.IntegerField()),
                ('ordi', models.CharField(max_length=32)),
                ('saisie', models.DateField(auto_now=True, help_text="Date de l'entrée de l'item")),
            ],
            options={
                'verbose_name': 'StEffectifs: Présents aux repas quotidien',
            },
        ),
        migrations.CreateModel(
            name='StFournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'verbose_name': "StFournisseur: approvisionnements d'article",
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='StMagasin',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=30, unique=True)),
                ('position', models.PositiveSmallIntegerField(null=True, verbose_name='Position')),
            ],
            options={
                'verbose_name': 'StMagasin: Lieu de stockage',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='StRayon',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=30, unique=True)),
                ('position', models.PositiveSmallIntegerField(null=True, verbose_name='Position')),
            ],
            options={
                'verbose_name': 'StRayon: Subdivisions de magasin',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='StMouvement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jour', models.DateField()),
                ('sens', models.IntegerField(default=-1, help_text='Entrée +1, Sortie -1')),
                ('origine', models.CharField(choices=[('achat', 'Entrée par Achats'), ('retour', 'Entrée Retour de camp'), ('od_in', 'Entrée Corrective'), ('repas', 'Sortie Repas en cuisine'), ('camp', 'Sortie pour camp'), ('od_out', 'Sortie Corrective')], db_index=True, default='od_out', help_text='Type de mouvement selon sens', max_length=8)),
                ('nbcolis', models.DecimalField(decimal_places=0, default=0, help_text="Pour les achats, nombre d'unité de vente", max_digits=6, null=True)),
                ('qtemouvement', models.DecimalField(decimal_places=2, help_text="Nombre d'unité stockées", max_digits=8)),
                ('prixunit', models.DecimalField(decimal_places=4, max_digits=10)),
                ('service', models.IntegerField(choices=[(0, 'Tous'), (1, 'Matin'), (2, 'Midi'), (3, 'Soir'), (4, '5eme')], default=0, help_text='Service repas concerné')),
                ('nbrations', models.DecimalField(decimal_places=4, help_text='Nbre de ration par qteMouvement', max_digits=8, null=True)),
                ('transfert', models.DateField(help_text='non modifiable si date de transfert', null=True)),
                ('ordi', models.CharField(blank=True, default='', help_text='pour tracer les mouvements', max_length=32)),
                ('saisie', models.DateField(auto_now=True, help_text="Date de l'entrée de l'item")),
                ('analytique', models.ForeignKey(on_delete=models.SET('deleted'), to='noegestion.geanalytique')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='noegestion.starticle')),
                ('fournisseur', models.ForeignKey(help_text="Le fournisseur habituel de l'article est proposé", null=True, on_delete=django.db.models.deletion.SET_NULL, to='noegestion.stfournisseur')),
            ],
            options={
                'verbose_name': 'StMouvement: Entrées et sorties de stock ',
            },
        ),
        migrations.CreateModel(
            name='StInventaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jour', models.DateField(help_text="Date de l'inventaire")),
                ('article_nom', models.CharField(help_text=' Conserve le nom historique', max_length=128, null=True)),
                ('unite_stock', models.CharField(help_text='Unité de base pour compter, accompagne le nom', max_length=8)),
                ('qte_stock', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('prix_moyen', models.DecimalField(decimal_places=4, max_digits=10, null=True)),
                ('prix_actuel', models.DecimalField(decimal_places=4, max_digits=10, null=True)),
                ('montant', models.DecimalField(decimal_places=2, help_text='Montant arrété pour la compta', max_digits=10, null=True)),
                ('modifiable', models.BooleanField(null=True)),
                ('ordi', models.CharField(max_length=32, null=True)),
                ('saisie', models.DateField(auto_now=True, help_text="Date de l'entrée de l'item")),
                ('article', models.ForeignKey(help_text=" Id historique de l'article", null=True, on_delete=django.db.models.deletion.SET_NULL, to='noegestion.starticle')),
            ],
            options={
                'verbose_name': "StInventaire: archivages d'états de stock",
            },
        ),
        migrations.AddIndex(
            model_name='steffectif',
            index=models.Index(fields=['jour'], name='noegestion__jour_df56f6_idx'),
        ),
        migrations.AddField(
            model_name='starticle',
            name='fournisseur',
            field=models.ForeignKey(default=1, help_text='Fournisseur habituel', on_delete=django.db.models.deletion.RESTRICT, related_name='articles', to='noegestion.stfournisseur'),
        ),
        migrations.AddField(
            model_name='starticle',
            name='magasin',
            field=models.ForeignKey(help_text='Lieu de stockage', on_delete=django.db.models.deletion.DO_NOTHING, to='noegestion.stmagasin'),
        ),
        migrations.AddField(
            model_name='starticle',
            name='rayon',
            field=models.ForeignKey(default=1, help_text='Catégorie de produit', on_delete=django.db.models.deletion.RESTRICT, related_name='articles', to='noegestion.strayon'),
        ),
        migrations.AddIndex(
            model_name='stmouvement',
            index=models.Index(fields=['jour', 'article', 'sens', 'origine'], name='noegestion__jour_85e0a5_idx'),
        ),
        migrations.AddIndex(
            model_name='stmouvement',
            index=models.Index(fields=['article', 'sens', 'jour'], name='noegestion__article_0cc27b_idx'),
        ),
        migrations.AddIndex(
            model_name='stinventaire',
            index=models.Index(fields=['jour', 'article'], name='noegestion__jour_87c9e9_idx'),
        ),
    ]
